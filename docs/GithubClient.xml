<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GithubClient</name>
    </assembly>
    <members>
        <member name="T:GithubClient.Blobs.Methods">
            <summary>
            A Collection of methods for working with Blob objects in the Github API
            </summary>
        </member>
        <member name="M:GithubClient.Blobs.Methods.GetBlob(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns a blob object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/git/blobs">Github Docs : Blob</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="Name">The name of the repository. The name is not case sensitive.</param>
            <param name="Sha">Secure hashing algorithm</param>
            <returns>A blob object</returns>
        </member>
        <member name="M:GithubClient.Blobs.Methods.GetBlob(System.String,System.String,GithubClient.Models.DirectoryContent)">
            <summary>
            Returns a blob object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/git/blobs">Github Docs : Blob</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="content">The contents of a file or directory in a repository.</param>
            <returns>A blob object</returns>
        </member>
        <member name="M:GithubClient.Blobs.Methods.GetBlob(System.String,System.String,GithubClient.Models.Tree)">
            <summary>
            Returns a blob object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/git/blobs">Github Docs : Blob</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="tree">Object specifying a tree structure.</param>
            <returns>A blob object</returns>
        </member>
        <member name="T:GithubClient.Contents.Methods">
            <summary>
            A Collection of methods for working with Content objects in the Github API
            </summary>
        </member>
        <member name="M:GithubClient.Contents.Methods.GetContents(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a content object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/contents#get-repository-content">Github Docs : Contents</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="Name">The name of the repository. The name is not case sensitive.</param>
            <returns>A DirectoryContent object</returns>
        </member>
        <member name="M:GithubClient.Contents.Methods.GetContents(System.String,System.String,GithubClient.Models.Repository,System.String)">
            <summary>
            Returns a content object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/contents#get-repository-content">Github Docs : Contents</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="repository">A Repository object</param>
            <param name="Ref">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <returns>A DirectoryContent object</returns>
        </member>
        <member name="M:GithubClient.Contents.Methods.GetContents(System.String,System.String,GithubClient.Models.DirectoryContent,System.String)">
            <summary>
            Returns a content object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/contents#get-repository-content">Github Docs : Contents</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="content">A DirectoryContent object</param>
            <param name="Ref">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <returns>A DirectoryContent object</returns>
        </member>
        <member name="M:GithubClient.Contents.Methods.GetFile(System.String,System.String,GithubClient.Models.DirectoryContent)">
            <summary>
            Returns a content object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/contents#get-repository-content">Github Docs : Contents</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="content">A DirectoryContent object</param>
            <returns>A FileContent object</returns>
        </member>
        <member name="T:GithubClient.Models.Blob">
            <summary>
            A Git blob (binary large object) is the object type used to store the contents of each file in a repository.
            </summary>
            
            <seealso href="https://docs.github.com/en/rest/git/blobs">Github Docs : Blobs</seealso>
        </member>
        <member name="P:GithubClient.Models.Blob.Sha">
            <summary>
            The file's SHA-1 hash is computed and stored in the blob object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Blob.NodeId">
            <summary>
            Id of a Node (Node is a generic term for an object) used in GraphQL
            </summary>
        </member>
        <member name="P:GithubClient.Models.Blob.Size">
            <summary>
            File size in bytes
            </summary>
        </member>
        <member name="P:GithubClient.Models.Blob.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Blob.Content">
            <summary>
            File Contents
            </summary>
        </member>
        <member name="P:GithubClient.Models.Blob.Encoding">
            <summary>
            The encoding used for content. Currently, "utf-8" and "base64" are supported.
            </summary>
        </member>
        <member name="M:GithubClient.Models.Blob.GetHeader">
            <summary>
            A method to return the default header
            </summary>
            <returns>The recommended header</returns>
        </member>
        <member name="T:GithubClient.Models.Links">
            <summary>
            A links object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Links.Self">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Links.Git">
            <summary>
            Github API Url for this objects blob
            </summary>
        </member>
        <member name="P:GithubClient.Models.Links.Html">
            <summary>
            A Url to view this object in a browser
            </summary>
        </member>
        <member name="T:GithubClient.Models.DirectoryContent">
            <summary>
            The contents of a file or directory in a repository
            </summary>
            
            <seealso href="https://docs.github.com/en/rest/repos/contents">Github Docs : Contents</seealso>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Name">
            <summary>
            Name of the object
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Path">
            <summary>
            Path to the object
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Sha">
            <summary>
            The file's SHA-1 hash
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Size">
            <summary>
            File size in bytes
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.HtmlUrl">
            <summary>
            A Url to view this object in a browser
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.GitUrl">
            <summary>
            Github API Url for this objects blob
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.DownloadUrl">
            <summary>
            The raw file download URl
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Type">
            <summary>
            file or dir
            </summary>
        </member>
        <member name="P:GithubClient.Models.DirectoryContent.Links">
            <summary>
            Collection of links
            </summary>
        </member>
        <member name="M:GithubClient.Models.DirectoryContent.GetHeader">
            <summary>
            A method to return the default header
            </summary>
            <returns>The recommended header</returns>
        </member>
        <member name="T:GithubClient.Models.FileContent">
            <summary>
            The contents of a file or directory in a repository
            </summary>
            
            <seealso href="https://docs.github.com/en/rest/repos/contents">Github Docs : Contents</seealso>
        </member>
        <member name="P:GithubClient.Models.FileContent.Name">
            <summary>
            Name of the object
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Path">
            <summary>
            Path to the object
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Sha">
            <summary>
            The file's SHA-1 hash
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Size">
            <summary>
            File size in bytes
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.HtmlUrl">
            <summary>
            A Url to view this object in a browser
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.GitUrl">
            <summary>
            Github API Url for this objects blob
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.DownloadUrl">
            <summary>
            The raw file download URl
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Type">
            <summary>
            file or dir
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Content">
            <summary>
            File content
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Encoding">
            <summary>
            Is always Base-64
            </summary>
        </member>
        <member name="P:GithubClient.Models.FileContent.Links">
            <summary>
            Collection of links
            </summary>
        </member>
        <member name="M:GithubClient.Models.FileContent.GetHeader">
            <summary>
            A method to return the default header
            </summary>
            <returns>The recommended header</returns>
        </member>
        <member name="T:GithubClient.Models.Owner">
            <summary>
            Owner object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.Login">
            <summary>
            Username/Orgname
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.Id">
            <summary>
            Github Id
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.NodeId">
            <summary>
            Id of a Node (Node is a generic term for an object) used in GraphQL
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.AvatarUrl">
            <summary>
            Url to Avatar image
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.GravatarId">
            <summary>
            Url to Gravatar Id
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.HtmlUrl">
            <summary>
            A Url to view this object in a browser
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.FollowersUrl">
            <summary>
            Github API Url for followers endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.FollowingUrl">
            <summary>
            Github API Url for following endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.GistsUrl">
            <summary>
            Github API Url for Gists endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.StarredUrl">
            <summary>
            Github API Url for Starred endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.SubscriptionsUrl">
            <summary>
            Github API Url for Subscriptions endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.OrganizationsUrl">
            <summary>
            Github API Url for Organizations endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.ReposUrl">
            <summary>
            Github API Url for user's repos endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.EventsUrl">
            <summary>
            Github API Url for Events endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.ReceivedEventsUrl">
            <summary>
            Github API Url for received events endpoint
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.Type">
            <summary>
            User/Organization
            </summary>
        </member>
        <member name="P:GithubClient.Models.Owner.SiteAdmin">
            <summary>
            Enterprise SiteAdmin
            </summary>
        </member>
        <member name="T:GithubClient.Models.Permissions">
            <summary>
            Permissions object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Permissions.Admin">
            <summary>
            Are you an admin
            </summary>
        </member>
        <member name="P:GithubClient.Models.Permissions.Maintain">
            <summary>
            Are you a maintainer
            </summary>
        </member>
        <member name="P:GithubClient.Models.Permissions.Push">
            <summary>
            Can you push
            </summary>
        </member>
        <member name="P:GithubClient.Models.Permissions.Triage">
            <summary>
            Can you triage
            </summary>
        </member>
        <member name="P:GithubClient.Models.Permissions.Pull">
            <summary>
            Can you pull
            </summary>
        </member>
        <member name="T:GithubClient.Models.Repository">
            <summary>
            The ultimate source for the network
            </summary>
            
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repositories</seealso>
        </member>
        <member name="P:GithubClient.Models.Repository.Id">
            <summary>
            Github Id
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.NodeId">
            <summary>
            Id of a Node (Node is a generic term for an object) used in GraphQL
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Name">
            <summary>
            The name of the repository.
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.FullName">
            <summary>
            A short description of the repository
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Private">
            <summary>
            Either true to make the repository private or false to make it public
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Owner">
            <summary>
            Owner object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HtmlUrl">
            <summary>
            A Url to view this object in a browser
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Description">
            <summary>
            A short description of the repository
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Fork">
            <summary>
            True if this repository is forked
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.ForksUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.KeysUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.CollaboratorsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.TeamsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HooksUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.IssueEventsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.EventsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.AssigneesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.BranchesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.TagsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.BlobsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.GitTagsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.GitRefsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.TreesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.StatusesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.LanguagesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.StargazersUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.ContributorsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.SubscribersUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.SubscriptionUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.CommitsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.GitCommitsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.CommentsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.IssueCommentUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.ContentsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.CompareUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.MergesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.ArchiveUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.DownloadsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.IssuesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.PullsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.MilestonesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.NotificationsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.LabelsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.ReleasesUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.DeploymentsUrl">
            <summary>
            Github API Endpoint Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.CreatedAt">
            <summary>
            Repository Creation Date
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.UpdatedAt">
            <summary>
            Repository Update Date
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.PushedAt">
            <summary>
            Most recent push
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.GitUrl">
            <summary>
            Git Clone Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.SshUrl">
            <summary>
            Ssh Clone Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.CloneUrl">
            <summary>
            Http Clone Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.SvnUrl">
            <summary>
            Svn Clone Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Homepage">
            <summary>
            A URL with more information about the repository
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Size">
            <summary>
            Size in bytes
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.StargazersCount">
            <summary>
            Count of Stargazers
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.WatchersCount">
            <summary>
            Count of Watchers
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Language">
            <summary>
            Repository Language
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HasIssues">
            <summary>
            Either true to enable issues for this repository or false to disable them
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HasProjects">
            <summary>
            Either true to enable projects for this repository or false to disable them
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HasDownloads">
            <summary>
            True or False if downloads are available
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HasWiki">
            <summary>
            Either true to enable the wiki for this repository or false to disable it.
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.HasPages">
            <summary>
            Either true to enable the pages for this repository or false to disable it.
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.ForksCount">
            <summary>
            Count of Forks
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.MirrorUrl">
            <summary>
            Mirror Url
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Archived">
            <summary>
            true to archive this repository. Note: You cannot unarchive repositories through the API
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Disabled">
            <summary>
            True or False
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.OpenIssuesCount">
            <summary>
            Count of open issues
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.License">
            <summary>
            License Object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.AllowForking">
            <summary>
            Either true to allow private forks, or false to prevent private forks
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.IsTemplate">
            <summary>
            Either true to make this repo available as a template repository or false to prevent it
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.WebCommitSignoffRequired">
            <summary>
            True or False for signoff
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Topics">
            <summary>
            Topic List
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Visibility">
            <summary>
            Can be public or private
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Forks">
            <summary>
            Number of forks
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.OpenIssues">
            <summary>
            Count of Open issues
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Watchers">
            <summary>
            Number of watchers
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.DefaultBranch">
            <summary>
            Default repository branch
            </summary>
        </member>
        <member name="P:GithubClient.Models.Repository.Permissions">
            <summary>
            Permissions object
            </summary>
        </member>
        <member name="M:GithubClient.Models.Repository.GetHeader">
            <summary>
            A method to return the default header
            </summary>
            <returns>The recommended header</returns>
        </member>
        <member name="T:GithubClient.Models.TreeRoot">
            <summary>
            A Git tree object creates the hierarchy between files in a Git repository
            </summary>
            
            <seealso href="https://docs.github.com/en/rest/git/trees">Github Docs : Trees</seealso>
        </member>
        <member name="P:GithubClient.Models.TreeRoot.Sha">
            <summary>
            The object's SHA-1 hash
            </summary>
        </member>
        <member name="P:GithubClient.Models.TreeRoot.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="P:GithubClient.Models.TreeRoot.Tree">
            <summary>
            A collection of Tree objects
            </summary>
        </member>
        <member name="P:GithubClient.Models.TreeRoot.Truncated">
            <summary>
            
            </summary>
        </member>
        <member name="T:GithubClient.Models.Tree">
            <summary>
            A Git tree object creates the hierarchy between files in a Git repository
            </summary>
            
            <seealso href="https://docs.github.com/en/rest/git/trees">Github Docs : Trees</seealso>
        </member>
        <member name="P:GithubClient.Models.Tree.Path">
            <summary>
            Path to the object
            </summary>
        </member>
        <member name="P:GithubClient.Models.Tree.Mode">
            <summary>
            The file mode; one of 100644 for file (blob), 100755 for executable (blob), 040000 for subdirectory (tree), 160000 for submodule (commit), or 120000 for a blob that specifies the path of a symlink.
            </summary>
        </member>
        <member name="P:GithubClient.Models.Tree.Type">
            <summary>
            Either blob, tree, or commit
            </summary>
        </member>
        <member name="P:GithubClient.Models.Tree.Sha">
            <summary>
            The object's SHA-1 hash
            </summary>
        </member>
        <member name="P:GithubClient.Models.Tree.Size">
            <summary>
            File size in bytes
            </summary>
        </member>
        <member name="P:GithubClient.Models.Tree.Url">
            <summary>
            Github API Url for this object
            </summary>
        </member>
        <member name="M:GithubClient.Models.Tree.GetHeader">
            <summary>
            A method to return the default header
            </summary>
            <returns>The recommended header</returns>
        </member>
        <member name="T:GithubClient.Repositories.Methods">
            <summary>
            A Collection of methods for working with Repository objects in the Github API
            </summary>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetRepositories(System.String,System.String,System.String)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <returns>A collection of repository objects</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetRepositories(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="PerPage">The number of results per page (max 100).</param>
            <param name="Page">Page number of the results to fetch</param>
            <returns>A collection of repository objects</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetRepositories(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="PerPage">The number of results per page (max 100).</param>
            <param name="Page">Page number of the results to fetch</param>
            <param name="Type">Specifies the types of repositories you want returned.</param>
            <param name="Direction">The order to sort by. Default: asc</param>
            <returns>A collection of repository objects</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetRepository(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="Name">The name of the repository. The name is not case sensitive.</param>
            <returns>A repository object</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetOrgRepositories(System.String,System.String,System.String)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Org">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <returns>A collection of repository objects</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetOrgRepositories(System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Org">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="PerPage">The number of results per page (max 100).</param>
            <param name="Page">Page number of the results to fetch</param>
            <returns>A collection of repository objects</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetOrgRepositories(System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Org">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="PerPage">The number of results per page (max 100).</param>
            <param name="Page">Page number of the results to fetch</param>
            <param name="Type">Specifies the types of repositories you want returned.</param>
            <param name="Direction">The order to sort by. Default: asc</param>
            <returns>A collection of repository objects</returns>
        </member>
        <member name="M:GithubClient.Repositories.Methods.GetOrgRepository(System.String,System.String,System.String,System.String)">
            <summary>
            Returns a repository object from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/repos/repos">Github Docs : Repos</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Org">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="Name">The name of the repository. The name is not case sensitive.</param>
            <returns>A repository object</returns>
        </member>
        <member name="T:GithubClient.Trees.Methods">
            <summary>
            A Collection of methods for working with Tree objects in the Github API
            </summary>
        </member>
        <member name="M:GithubClient.Trees.Methods.GetTree(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Returns a repository Tree from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/git/trees">Github Docs : Trees</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="Owner">The account owner of the repository. This can also be the organization name. The name is not case sensitive.</param>
            <param name="Name">The name of the repository. The name is not case sensitive.</param>
            <param name="Ref">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <returns>A tree object</returns>
        </member>
        <member name="M:GithubClient.Trees.Methods.GetTree(System.String,System.String,GithubClient.Models.Repository,System.String,System.Boolean)">
            <summary>
            Returns a repository Tree from the Github API
            </summary>
            <seealso href="https://docs.github.com/en/rest/git/trees">Github Docs : Trees</seealso>
            <param name="PAT">Personal Access Token</param>
            <param name="GithubUrl">Github API Url</param>
            <param name="repository">A Repository object</param>
            <param name="Ref">The name of the commit/branch/tag. Default: the repository’s default branch (usually master)</param>
            <param name="Recursive">Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in :tree_sha</param>
            <returns>A tree object</returns>
        </member>
    </members>
</doc>
